{
   "type":"object",
   "description":"This is a VDC Blueprint which consists of five sections",
   "properties":{
      "INTERNAL_STRUCTURE":{
         "type":"object",
         "description":"General information about the VDC Blueprint",
         "properties":{
            "Overview":{
               "type":"object",
               "properties":{
                  "name":{
                     "type":"string",
                     "description":"This field should contain the name of the VDC Blueprint"
                  },
                  "description":{
                     "type":"string",
                     "description":"This field should contain a short description of the VDC Blueprint"
                  },
                  "tags":{
                     "type":"array",
                     "description":"Each element of this array should contain some keywords that describe the functionality of each one exposed VDC method",
                     "items":{
                        "type":"object",
                        "properties":{
                           "method_id":{
                              "type":"string",
                              "description":"The id (operationId) of the method (as indicated in the EXPOSED_API.paths field)"
                           },
                           "tags":{
                              "type":"array",
                              "items":{
                                 "type":"string"
                              },
                              "minItems":1,
                              "uniqueItems":true
                           }
                        },
                        "additionalProperties":false,
                        "required":[
                           "method_id",
                           "tags"
                        ]
                     },
                     "minItems":1,
                     "uniqueItems":true
                  }
               },
               "additionalProperties":false,
               "required":[
                  "name",
                  "description",
                  "tags"
               ]
            },
            "Data_Sources":{
               "type":"array",
               "items":{
                  "type":"object",
                  "properties":{
                     "id":{
                        "type":"string",
                        "description":"A unique identifier"
                     },
                     "description":{
                        "type":"string"
                     },
                     "location":{
                        "enum":[
                           "cloud",
                           "edge"
                        ]
                     },
                     "class":{
                        "enum":[
                           "relational database",
                           "object storage",
                           "time-series database",
                           "api",
                           "data stream"
                        ]
                     },
                     "type":{
                        "enum":[
                           "MySQL",
                           "Minio",
                           "InfluxDB",
                           "rest",
                           "other"
                        ]
                     },
                     "parameters":{
                        "type":"object",
                        "description":"Connection parameters"
                     },
                     "schema":{
                        "type":"object"
                     }
                  },
                  "required":[
                     "id"
                  ]
               },
               "minItems":1,
               "uniqueItems":true
            },
              "Methods_Input": {
                "type": "object",
                "description": "This filed contains the part of the data source that each method needs to be executed",
                "properties": {
                  "Methods": {
                    "type": "array",
                    "description": "The list of methods",
                    "items": {
                      "type": "object",
                      "properties": {
                        "method_id": {
                          "type": "string",
                          "description": "The id (operationId) of the method (as indicated in the EXPOSED_API.paths field)"
                        },
                        "dataSources": {
                          "type": "array",
                          "description": "The list of data sources required by the method",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dataSource_id": {
                                "type": "string",
                                "description": "The id of the data sources (as indicated in the Data_Sources field)"
                              },
                              "dataSource_type": {
                                "type": "string",
                                "description": "The type of the data sources (relationa/not_relational/object)"
                              },
                              "database": {
                                "type": "array",
                                "description": "the list of databases required by a method in a data source",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "database_id": {
                                      "type": "string",
                                      "description": "The id of the database"
                                    },
                                    "tables": {
                                      "type": "array",
                                      "description": "the list of tables/collections required by a method in a data source",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "table_id": {
                                            "type": "string",
                                            "description": "The id of the tables/collection "
                                          },
                                          "columns": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "column_id": {
                                                  "type": "string",
                                                  "description": "The id of the column/field"
                                                },
                                                "computeDataUtility": {
                                                  "type": "boolean",
                                                  "description": "True if it is required for data utility computation"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
            "Flow":{
               "type":"object",
               "description":"The data flow that implements the VDC",
               "properties":{
                  "platform":{
                     "enum":[
                        "Spark",
                        "Node-RED"
                     ]
                  },
                  "parameters":{
                     "type":"object"
                  },
                  "source_code":{

                  }
               }
            },
            "DAL_Images":{
               "description":"Docker images that must be deployed in the DAL indexed by DAL name. It will be used to compose the service name and the DNS entry that other images in the cluster can access to.",
               "type":"object",
               "additionalProperties":{
                  "description":"ImageSet represents a set of docker images whose key is an identifier and value is a docker image name in the standard format [group]/\u003cimage_name\u003e:[release]",
                  "type":"object",
                  "additionalProperties":{
                     "description":"ImageInfo is the information about an image that will be deployed by the deployment engine",
                     "type":"object",
                     "required":[
                        "image"
                     ],
                     "properties":{
                        "external_port":{
                           "description":"Port in which this image must be exposed. It must be unique across all images in all the ImageSets defined in this blueprint. Due to limitations in k8s, the port range must be bewteen 30000 and 32767",
                           "type":"integer",
                           "format":"int64"
                        },
                        "image":{
                           "description":"Image is the image name in the standard format [group]/\u003cimage_name\u003e:[release]",
                           "type":"string"
                        },
                        "internal_port":{
                           "description":"Port in which the docker image is listening internally. Two images inside the same ImageSet can't have the same internal port.",
                           "type":"integer",
                           "format":"int64"
                        }
                     }
                  }
               }
            },
            "VDC_Images":{
               "description":"ImageSet represents a set of docker images whose key is an identifier and value is a docker image name in the standard format [group]/\u003cimage_name\u003e:[release]",
               "type":"object",
               "additionalProperties":{
                  "description":"ImageInfo is the information about an image that will be deployed by the deployment engine",
                  "type":"object",
                  "required":[
                     "image"
                  ],
                  "properties":{
                     "external_port":{
                        "description":"Port in which this image must be exposed. It must be unique across all images in all the ImageSets defined in this blueprint. Due to limitations in k8s, the port range must be bewteen 30000 and 32767",
                        "type":"integer",
                        "format":"int64"
                     },
                     "image":{
                        "description":"Image is the image name in the standard format [group]/\u003cimage_name\u003e:[release]",
                        "type":"string"
                     },
                     "internal_port":{
                        "description":"Port in which the docker image is listening internally. Two images inside the same ImageSet can't have the same internal port.",
                        "type":"integer",
                        "format":"int64"
                     }
                  }
               }
            },
            "Identity_Access_Management":{
               "type":"object",
               "properties":{
                  "jwks_uri":{
                     "type":"string"
                  },
                  "iam_endpoint":{
                     "type":"string"
                  },
                  "roles":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     },
                     "minItems":1
                  },
                  "provider":{
                     "type":"array",
                     "items":{
                        "type":"object",
                        "properties":{
                           "name":{
                              "type":"string"
                           },
                           "type":{
                              "type":"string"
                           },
                           "uri":{
                              "type":"string"
                           },
                           "loginPortal":{
                              "type":"string"
                           }
                        },
                        "required":[
                           "name",
                           "uri"
                        ]
                     },
                     "minItems":1
                  }
               },
               "required":[
                  "jwks_uri",
                  "iam_endpoint"
               ]
            },
            "Testing_Output_Data":{
               "type":"array",
               "items":{
                  "type":"object",
                  "properties":{
                     "method_id":{
                        "type":"string",
                        "description":"The id (operationId) of the method (as indicated in the EXPOSED_API.paths field)"
                     },
                     "zip_data":{
                        "type":"string",
                        "description":"The URI to the zip testing output data for each one exposed VDC method"
                     }
                  },
                  "additionalProperties":false,
                  "required":[
                     "method_id",
                     "zip_data"
                  ]
               },
               "minItems":1,
               "uniqueItems":true
            }
         },
         "additionalProperties":false,
         "required":[
            "Overview",
            "Data_Sources"
         ]
      },
      "DATA_MANAGEMENT":{
         "description":"list of methods",
         "type":"array",
         "items":{
            "type":"object",
            "properties":{
               "method_id":{
                  "description":"The id (operationId) of the method (as indicated in the EXPOSED_API.paths field)",
                  "type":"string"
               },
               "attributes":{
                  "type":"object",
                  "description":"goal trees",
                  "properties":{
                     "dataUtility":{
                        "type":"array",
                        "items":{
                           "type":"object",
                           "description":"definition of the metric",
                           "properties":{
                              "id":{
                                 "description":"id of the metric",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"name of the metric",
                                 "type":"string"
                              },
                              "type":{
                                 "description":"type of the metric",
                                 "type":"string"
                              },
                              "properties":{
                                 "type":"object",
                                 "description":"properties related to the metric",
                                 "additionalProperties":{
                                    "type":"object",
                                    "description":"properties related to the metric",
                                    "properties":{
                                       "unit":{
                                          "description":"unit of measure of the property",
                                          "type":"string"
                                       },
                                       "maximum":{
                                          "description":"lower limit of the offered property",
                                          "type":"number"
                                       },
                                       "minimum":{
                                          "description":"upper limit of the offered property",
                                          "type":"number"
                                       },
                                       "value":{
                                          "description":"value of the property",
                                          "type":[
                                             "string",
                                             "number",
                                             "array",
                                             "boolean"
                                          ]
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     },
                     "security":{
                        "$ref":"#/properties/DATA_MANAGEMENT/items/properties/attributes/properties/dataUtility"
                     },
                     "privacy":{
                        "$ref":"#/properties/DATA_MANAGEMENT/items/properties/attributes/properties/dataUtility"
                     }
                  }
               }
            },
            "required":[
               "method_id",
               "attributes"
            ]
         }
      },
      "ABSTRACT_PROPERTIES":{

      },
      "COOKBOOK_APPENDIX":{
         "description":"Definition of the Cookbook Appendix section in the blueprint",
         "type":"object",
         "required":[
            "name",
            "infrastructure"
         ],
         "properties":{
            "description":{
               "description":"An optional description for the deployment",
               "type":"string"
            },
            "infrastructure":{
               "description":"A list of infrastructures that should be initialized to deploy VDCs of this blueprint",
               "type":"array",
               "items":{
                  "description":"Represents a cloud or edge site that's able to create resources such as virtual machines or volumes",
                  "type":"object",
                  "required":[
                     "name",
                     "type",
                     "provider",
                     "resources"
                  ],
                  "properties":{
                     "description":{
                        "description":"Optional description for the infrastructure",
                        "type":"string"
                     },
                     "name":{
                        "description":"Unique name for the infrastructure",
                        "type":"string",
                        "uniqueItems":true
                     },
                     "owner":{
                        "description":"Owner of the infrastructure",
                        "type":"string",
                        "pattern":"DataOwner|DataConsumer|"
                     },
                     "provider":{
                        "description":"Contains information about a cloud or edge provider",
                        "type":"object",
                        "properties":{
                           "api_endpoint":{
                              "description":"Endpoint to use for this infrastructure",
                              "type":"string"
                           },
                           "api_type":{
                              "description":"Type of the infrastructure. i.e AWS, Cloudsigma, GCP or Edge",
                              "type":"string",
                              "example":"AWS"
                           },
                           "authentication":{
                              "description":"Authentication information to use on the provider.",
                              "type":"object"
                           }
                        }
                     },
                     "resources":{
                        "description":"List of resources to deploy",
                        "type":"array",
                        "items":{
                           "description":"Represents a resource such as a virtual machine",
                           "type":"object",
                           "required":[
                              "role",
                              "image_id"
                           ],
                           "properties":{
                              "cores":{
                                 "description":"Number of cores. Ignored if type is provided",
                                 "type":"integer",
                                 "format":"int64"
                              },
                              "cpu":{
                                 "description":"CPU speed in MHz. Ignored if type is provided",
                                 "type":"integer",
                                 "format":"int64"
                              },
                              "disk":{
                                 "description":"Boot disk size in MB",
                                 "type":"integer",
                                 "format":"int64"
                              },
                              "drives":{
                                 "description":"List of data drives to attach to this VM",
                                 "type":"array",
                                 "items":{
                                    "description":"Contains the information of a data drive",
                                    "type":"object",
                                    "required":[
                                       "name",
                                       "type",
                                       "size"
                                    ],
                                    "properties":{
                                       "name":{
                                          "description":"Name of the image to use. Most of the times, it will be available as /dev/disk/by-id/${name} value in the VM",
                                          "type":"string"
                                       },
                                       "size":{
                                          "description":"Size of the disk in MB",
                                          "type":"integer",
                                          "format":"int64"
                                       },
                                       "type":{
                                          "description":"Type of the drive. It can be \"SSD\" or \"HDD\"",
                                          "type":"string",
                                          "pattern":"SSD|HDD",
                                          "example":"SSD"
                                       }
                                    }
                                 }
                              },
                              "image_id":{
                                 "description":"Boot image ID to use",
                                 "type":"string"
                              },
                              "ip":{
                                 "description":"IP to assign this VM. In case it's not specified, the first available one will be used.",
                                 "type":"string"
                              },
                              "name":{
                                 "description":"Suffix for the hostname. The real hostname will be formed of the infrastructure name + resource name",
                                 "type":"string"
                              },
                              "ram":{
                                 "description":"RAM quantity in MB. Ignored if type is provided",
                                 "type":"integer",
                                 "format":"int64"
                              },
                              "role":{
                                 "description":"Role that this VM plays. In case of a Kubernetes deployment at least one \"master\" is needed.",
                                 "type":"string",
                                 "pattern":"master|slave",
                                 "example":"master"
                              },
                              "type":{
                                 "description":"Type of the VM to create",
                                 "type":"string",
                                 "example":"n1-small"
                              }
                           }
                        }
                     },
                     "tags":{
                        "description":"List of tags to apply to this infrastructure",
                        "type":"array",
                        "items":{
                           "type":"string"
                        }
                     },
                     "type":{
                        "description":"Type of the infrastructure",
                        "type":"string",
                        "pattern":"Cloud|Edge",
                        "example":"Cloud"
                     }
                  }
               }
            },
            "name":{
               "description":"Unique name of the deployment",
               "type":"string",
               "uniqueItems":true
            },
            "Identity_Access_Management":{
               "type":"object",
               "properties":{
                  "validation_keys":{
                     "type":"array",
                     "items":{
                        "type":"object"
                     }
                  },
                  "mapping":{
                     "type":"array",
                     "items":{
                        "oneOf":[
                           {
                              "type":"object",
                              "properties":{
                                 "provider":{
                                    "type":"string"
                                 },
                                 "roles":{
                                    "type":"array",
                                    "items":{
                                       "type":"string"
                                    }
                                 },
                                 "role_map":{
                                    "type":"array",
                                    "items":{
                                       "type":"object",
                                       "properties":{
                                          "matcher":{
                                             "type":"string"
                                          },
                                          "roles":{
                                             "type":"array",
                                             "items":{
                                                "type":"string"
                                             }
                                          },
                                          "priority":{
                                             "type":"number"
                                          }
                                       }
                                    }
                                 },
                                 "mapping_url":{
                                    "enum":[
                                       ""
                                    ]
                                 }
                              },
                              "required":[
                                 "role_map"
                              ]
                           },
                           {
                              "type":"object",
                              "properties":{
                                 "provider":{
                                    "type":"string"
                                 },
                                 "roles":{
                                    "type":"array",
                                    "items":{
                                       "type":"string"
                                    }
                                 },
                                 "mapping_url":{
                                    "type":"string"
                                 },
                                 "role_map":{
                                    "enum":[
                                       ""
                                    ]
                                 }
                              },
                              "required":[
                                 "mapping_url"
                              ]
                           }
                        ]
                     }
                  }
               },
               "required":[
                  "mapping"
               ]
            }
         }
      },
      "EXPOSED_API":{
         "title":"CAF API",
         "type":"object",
         "description":"The CAF RESTful API of the VDC, written according to the current version (3.0.1) of the OpenAPI Specification (OAS), but also adapted to DITAS requirements",
         "properties":{
            "paths":{
               "type":"object",
               "patternProperties":{
                  "^/":{
                     "type":"object",
                     "patternProperties":{
                        "^get$":{
                           "allOf":[
                              {
                                 "$ref":"#/properties/EXPOSED_API/definitions/method"
                              },
                              {
                                 "properties":{
                                    "parameters":{

                                    }
                                 }
                              }
                           ]
                        },
                        "^post$":{
                           "allOf":[
                              {
                                 "$ref":"#/properties/EXPOSED_API/definitions/method"
                              },
                              {
                                 "properties":{
                                    "requestBody":{
                                       "type":"object",
                                       "properties":{
                                          "content":{
                                             "$ref":"#/properties/EXPOSED_API/definitions/content"
                                          }
                                       }
                                    }
                                 },
                                 "required":[
                                    "requestBody"
                                 ]
                              }
                           ]
                        }
                     }
                  }
               }
            }
         },
         "definitions":{
            "method":{
               "title":"An Exposed VDC Method",
               "type":"object",
               "description":"Corresponds to the Operation Object defined in the OpenAPI Specification (OAS) version 3.0.1",
               "properties":{
                  "summary":{

                  },
                  "operationId":{

                  },
                  "responses":{
                     "type":"object",
                     "patternProperties":{
                        "^200$|^201$":{
                           "type":"object",
                           "properties":{
                              "content":{
                                 "$ref":"#/properties/EXPOSED_API/definitions/content"
                              }
                           },
                           "required":[
                              "content"
                           ]
                        }
                     }
                  },
                  "x-data-sources":{
                     "type":"array",
                     "description":"An array that contains all the identifiers of the data sources (as indicated in the INTERNAL_STRUCTURE.Data_Sources field) that are accessed by the method",
                     "items":{
                        "type":"string"
                     },
                     "minItems":1,
                     "uniqueItems":true
                  },
                  "x-iam-roles":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               "required":[
                  "summary",
                  "operationId",
                  "responses",
                  "x-data-sources"
               ]
            },
            "content":{
               "type":"object",
               "patternProperties":{
                  "^application/json$":{
                     "type":"object",
                     "properties":{
                        "schema":{
                           "type":"object"
                        }
                     },
                     "required":[
                        "schema"
                     ]
                  }
               }
            }
         }
      }
   },
   "additionalProperties":false,
   "required":[
      "INTERNAL_STRUCTURE",
      "DATA_MANAGEMENT",
      "ABSTRACT_PROPERTIES",
      "COOKBOOK_APPENDIX",
      "EXPOSED_API"
   ]
}
